#!/bin/bash

# tabview.sh - Pretty-print delimited tables with aligned columns and optional header color
# Works with stdin, large files, --sep, --head, and auto-detects CSV/TSV

DELIM=""
FILE=""
HEAD=""
USE_COLOR=true

usage() {
    echo "Usage: $0 [--sep SEP] [--head N] [--no-color] [file]"
    echo
    echo "Options:"
    echo "  -s, --sep SEP     Field separator (e.g. ',' or '\\t')"
    echo "  --head N          Show only the first N lines (good for large files)"
    echo "  --no-color        Disable header colorization"
    echo "  file              Input file (optional if piping stdin)"
    exit 1
}

# Parse arguments
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -s|--sep)
            shift
            DELIM="$1"
            ;;
        --head)
            shift
            HEAD="$1"
            ;;
        --no-color)
            USE_COLOR=false
            ;;
        -h|--help)
            usage
            ;;
        -*)
            echo "Unknown option: $1" >&2
            usage
            ;;
        *)
            FILE="$1"
            ;;
    esac
    shift
done

# Handle literal \t
if [[ "$DELIM" == "\\t" ]]; then
    DELIM=$'\t'
fi

# Auto-detect delimiter from file extension
if [[ -z "$DELIM" && -n "$FILE" ]]; then
    case "$FILE" in
        *.csv) DELIM=',' ;;
        *.tsv|*.txt) DELIM=$'\t' ;;
        *) DELIM=$'\t' ;;
    esac
fi

# Default delimiter if still unset
DELIM=${DELIM:-$'\t'}

# Apply ANSI bold yellow to first line (header)
highlight_header() {
    awk 'NR==1 { print "\033[1;33m" $0 "\033[0m"; next } { print }'
}

# Read from file (optionally head-limited)
process_file() {
    local infile="$1"
    if [[ -n "$HEAD" ]]; then
        head -n "$HEAD" "$infile"
    else
        cat "$infile"
    fi
}

# Read from stdin (optionally head-limited)
process_stdin() {
    if [[ -n "$HEAD" ]]; then
        head -n "$HEAD"
    else
        cat
    fi
}

# Main logic
if [[ -n "$FILE" ]]; then
    if [[ -e "$FILE" ]]; then
        if $USE_COLOR; then
            process_file "$FILE" | column -s "$DELIM" -t | highlight_header | less -SR
        else
            process_file "$FILE" | column -s "$DELIM" -t | less -S
        fi
    else
        echo "Error: file '$FILE' not found" >&2
        exit 1
    fi
else
    if [ -t 0 ]; then
        echo "Error: No input provided. Pipe data to stdin or provide a file." >&2
        exit 1
    fi
    if $USE_COLOR; then
        process_stdin | column -s "$DELIM" -t | highlight_header | less -SR
    else
        process_stdin | column -s "$DELIM" -t | less -S
    fi
fi
